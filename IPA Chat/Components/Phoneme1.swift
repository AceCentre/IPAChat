import Foundation

enum Phonemes1: String {
    case english_GB = "English-GB"
    case english_US = "English-US"
    case french = "French"
    case spanish = "Spanish"
    case polish = "Polish"
    
    var get: [Phoneme] {
        let mirror = Mirror(reflecting: self)
        if let propertyName = mirror.children.first?.label {
            let elementsArrayName = propertyName.lowercased() + "_list"
            return Mirror(reflecting: Phonemes.self).children.first { $0.label == elementsArrayName }?.value as? [Phoneme] ?? []
        }
        return []
    }
}

extension Phonemes1 {
    private static let english_GB_list: [Phoneme] = [
        Phoneme(symbol: "iː", ipaNotation: "iː", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɪ", ipaNotation: "ɪ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "e", ipaNotation: "e", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "æ", ipaNotation: "æ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "aː", ipaNotation: "aː", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɒ", ipaNotation: "ɒ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɔː", ipaNotation: "ɔː", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ʊ", ipaNotation: "ʊ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "uː", ipaNotation: "uː", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɜː", ipaNotation: "ɜː", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ə", ipaNotation: "ə", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "eɪ", ipaNotation: "eɪ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "aɪ", ipaNotation: "aɪ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "ɔɪ", ipaNotation: "ɔɪ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "aʊ", ipaNotation: "aʊ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "oʊ", ipaNotation: "oʊ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "ɪə", ipaNotation: "ɪə", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "eə", ipaNotation: "eə", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "ʊə", ipaNotation: "ʊə", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "p", ipaNotation: "p", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "b", ipaNotation: "b", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "t", ipaNotation: "t", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "d", ipaNotation: "d", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "k", ipaNotation: "k", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "g", ipaNotation: "g", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʧ", ipaNotation: "ʧ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʤ", ipaNotation: "ʤ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "f", ipaNotation: "f", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "v", ipaNotation: "v", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "θ", ipaNotation: "θ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ð", ipaNotation: "ð", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "s", ipaNotation: "s", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "z", ipaNotation: "z", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʃ", ipaNotation: "ʃ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʒ", ipaNotation: "ʒ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "h", ipaNotation: "h", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "m", ipaNotation: "m", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "n", ipaNotation: "n", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ŋ", ipaNotation: "ŋ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "l", ipaNotation: "l", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "r", ipaNotation: "r", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "j", ipaNotation: "j", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "w", ipaNotation: "w", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: ",", ipaNotation: ",", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "ˈ", ipaNotation: "ˈ", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "‖", ipaNotation: "‖", type: .pause, x: 0, y: 0),
        Phoneme(symbol: "‖‖", ipaNotation: "‖‖", type: .pause,  x: 0, y: 0)
    ]
    
    private static let english_US_list: [Phoneme] = [
        Phoneme(symbol: "i", ipaNotation: "i", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɪ", ipaNotation: "ɪ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "e", ipaNotation: "e", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɛ", ipaNotation: "ɛ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "æ", ipaNotation: "æ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "u", ipaNotation: "u", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ʊ", ipaNotation: "ʊ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "o", ipaNotation: "o", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɔ", ipaNotation: "ɔ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɑ", ipaNotation: "ɑ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ʌ", ipaNotation: "ʌ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ə", ipaNotation: "ə", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "aɪ", ipaNotation: "aɪ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "aʊ", ipaNotation: "aʊ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "ɔɪ", ipaNotation: "ɔɪ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "oʊ", ipaNotation: "oʊ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "eɪ", ipaNotation: "eɪ", type: .diphthong, x: 0, y: 0),
        Phoneme(symbol: "p", ipaNotation: "p", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "b", ipaNotation: "b", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "t", ipaNotation: "t", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "d", ipaNotation: "d", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "k", ipaNotation: "k", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "g", ipaNotation: "g", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "f", ipaNotation: "f", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "v", ipaNotation: "v", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "θ", ipaNotation: "θ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ð", ipaNotation: "ð", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "s", ipaNotation: "s", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "z", ipaNotation: "z", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʃ", ipaNotation: "ʃ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʒ", ipaNotation: "ʒ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "tʃ", ipaNotation: "tʃ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "dʒ", ipaNotation: "dʒ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "m", ipaNotation: "m", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "n", ipaNotation: "n", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ŋ", ipaNotation: "ŋ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "l", ipaNotation: "l", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "r", ipaNotation: "r", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "w", ipaNotation: "w", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "j", ipaNotation: "j", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "h", ipaNotation: "h", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: ",", ipaNotation: ",", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "ˈ", ipaNotation: "ˈ", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "‖", ipaNotation: "‖", type: .pause, x: 0, y: 0),
        Phoneme(symbol: "‖‖", ipaNotation: "‖‖", type: .pause,  x: 0, y: 0)]
    
    private static let french_list: [Phoneme] = [
        Phoneme(symbol: "i", ipaNotation: "i", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "e", ipaNotation: "e", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɛ", ipaNotation: "ɛ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "a", ipaNotation: "a", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɑ", ipaNotation: "ɑ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "o", ipaNotation: "o", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ɔ", ipaNotation: "ɔ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "u", ipaNotation: "u", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "y", ipaNotation: "y", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "ø", ipaNotation: "ø", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "œ", ipaNotation: "œ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "w", ipaNotation: "w", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "ɥ", ipaNotation: "ɥ", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "j", ipaNotation: "j", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "p", ipaNotation: "p", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "b", ipaNotation: "b", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "t", ipaNotation: "t", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "d", ipaNotation: "d", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "k", ipaNotation: "k", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "g", ipaNotation: "g", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "f", ipaNotation: "f", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "v", ipaNotation: "v", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "s", ipaNotation: "s", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "z", ipaNotation: "z", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʃ", ipaNotation: "ʃ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʒ", ipaNotation: "ʒ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "m", ipaNotation: "m", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "n", ipaNotation: "n", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɲ", ipaNotation: "ɲ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ŋ", ipaNotation: "ŋ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "l", ipaNotation: "l", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʁ", ipaNotation: "ʁ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɑ̃", ipaNotation: "ɑ̃", type: .nasal, x: 0, y: 0),
        Phoneme(symbol: "ɛ̃", ipaNotation: "ɛ̃", type: .nasal, x: 0, y: 0),
        Phoneme(symbol: "œ̃", ipaNotation: "œ̃", type: .nasal, x: 0, y: 0),
        Phoneme(symbol: "ɔ̃", ipaNotation: "ɔ̃", type: .nasal, x: 0, y: 0),
        Phoneme(symbol: ",", ipaNotation: ",", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "ˈ", ipaNotation: "ˈ", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "‖", ipaNotation: "‖", type: .pause, x: 0, y: 0),
        Phoneme(symbol: "‖‖", ipaNotation: "‖‖", type: .pause,  x: 0, y: 0)]
    
    private static let spanish_list: [Phoneme] = [
        Phoneme(symbol: "i", ipaNotation: "i", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "e", ipaNotation: "e", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "a", ipaNotation: "a", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "o", ipaNotation: "o", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "u", ipaNotation: "u", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "p", ipaNotation: "p", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "b", ipaNotation: "b", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "t", ipaNotation: "t", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "d", ipaNotation: "d", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "k", ipaNotation: "k", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "g", ipaNotation: "g", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʧ", ipaNotation: "ʧ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʤ", ipaNotation: "ʤ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "f", ipaNotation: "f", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "θ", ipaNotation: "θ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "s", ipaNotation: "s", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʃ", ipaNotation: "ʃ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "x", ipaNotation: "x", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "m", ipaNotation: "m", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "n", ipaNotation: "n", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɲ", ipaNotation: "ɲ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ŋ", ipaNotation: "ŋ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "l", ipaNotation: "l", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʎ", ipaNotation: "ʎ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "r", ipaNotation: "r", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɾ", ipaNotation: "ɾ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʁ", ipaNotation: "ʁ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "j", ipaNotation: "j", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "w", ipaNotation: "w", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: ",", ipaNotation: ",", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "ˈ", ipaNotation: "ˈ", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "‖", ipaNotation: "‖", type: .pause, x: 0, y: 0),
        Phoneme(symbol: "‖‖", ipaNotation: "‖‖", type: .pause,  x: 0, y: 0)]
    
    private static let polish_list: [Phoneme] = [
        Phoneme(symbol: "i", ipaNotation: "i", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "e", ipaNotation: "ɛ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "a", ipaNotation: "a", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "o", ipaNotation: "ɔ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "u", ipaNotation: "u", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "y", ipaNotation: "ɨ", type: .vowel, x: 0, y: 0),
        Phoneme(symbol: "p", ipaNotation: "p", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "b", ipaNotation: "b", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "t", ipaNotation: "t", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "d", ipaNotation: "d", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "k", ipaNotation: "k", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "g", ipaNotation: "ɡ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "f", ipaNotation: "f", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "v", ipaNotation: "v", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "s", ipaNotation: "s", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "z", ipaNotation: "z", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʂ", ipaNotation: "ʂ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʐ", ipaNotation: "ʐ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɕ", ipaNotation: "ɕ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʑ", ipaNotation: "ʑ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "m", ipaNotation: "m", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "n", ipaNotation: "n", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɲ", ipaNotation: "ɲ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ŋ", ipaNotation: "ŋ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "l", ipaNotation: "l", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ɫ", ipaNotation: "ɫ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "r", ipaNotation: "r", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "w", ipaNotation: "w", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "j", ipaNotation: "j", type: .semivowel, x: 0, y: 0),
        Phoneme(symbol: "ʦ", ipaNotation: "ʦ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʣ", ipaNotation: "ʣ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʧ", ipaNotation: "ʧ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: "ʤ", ipaNotation: "ʤ", type: .consonant, x: 0, y: 0),
        Phoneme(symbol: ",", ipaNotation: ",", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "ˈ", ipaNotation: "ˈ", type: .stress, x: 0, y: 0),
        Phoneme(symbol: "‖", ipaNotation: "‖", type: .pause, x: 0, y: 0),
        Phoneme(symbol: "‖‖", ipaNotation: "‖‖", type: .pause,  x: 0, y: 0)]
}
